[clusterparameter]

maxcluster = 100

minStationAroundInitialcluster = 10
initialstationdistance = 7
cutoff = 10
runs = 1

#minimum distance of initial centroids
centroidminDistance = 2

comparedelta = 2

#maximum distance from station to cluster center
stationdistance = 5
minclusterStation = 5


[traveltime calculation options]

tttopt = -ph P

[algorithm method]
#2 kmeans
cam = 2

[data]

# Phase to consider [right now only P and S possible!]
ttphases=P
# resampling data to frequency in Hz or s, should match your gf store
new_frequence = 0.5
# if download of was done with pyrocko_download command, set to 1
pyrocko_download = 1
# if download with pyrocko was done you can choose between velocity and displacement
quantity = velocity

#if not using pyrocko download:
export_unfiltered=false
export_filtered=false
export_resampled=false

# if colosseo synthetics should be used, set to 1
colesseo_input = 0
# give the colosseo scenario.yml file
colosseo_scenario_yml = /media/asteinbe/data/asteinbe/mydl/scenario.yml

[synthetic test]

# do synthetic test with a real station distribution, specify the
# parameters in eventfolder with event.syn
synthetic_test = 1
# add noise to the synthetic, based on the variance of the real station
# covariance of noise not enabled right now
synthetic_test_add_noise = 0
synthetic_test_pertub_arrivals = 0
shift_max = 4 # [s] also the maxium shift for empirical corrections
# weight the arrays based on equal weights per azimuth. Azimuth gets divided in
# 12 blocks. Any arrays in each block will be of combined weight 1.
weight_by_azimuth = 1
# bootstrap the arrays to estimate the uncerainity:
bootstrap_array_weights = 0
# number of bootstraps to carry out:
n_bootstrap = 0

[general parameter]
# enable to run an optimization for the timeshifts, which lead to the highest semblance (foreshock/aftershock)
correct_shifts_empirical_run = 0
# turn valid to enable shift correction, either empirical(switch below) or xcorr (default)
correct_shifts = 0
 # enable to apply empirical time shifts atm the empirical_run than needs to be disabled
correct_shifts_empirical = 0
# enable to use brute force search for a common array wide timeshift
correct_shifts_empirical_manual = 0
# enable to use brute force search for station based timeshift
correct_shifts_empirical_manual_station_wise = 0

# dimx of grid for empirical correction (should be the same as for the main process in most cases)
dimx_emp = 50
# dimy of grid (should be the same as for the main process in most cases)
dimy_emp = 50
# step length in s.
step_emp = 2
# window length in s.
winlen_emp = 8

#calculate semblance from all arrays in a combined step (else each arrays semblance will be calculated
# seperatly and than combined, weighted by the azimuthal distribution of arrays)
combine_all = 0
#normalize all semblances to 0-1
norm_all=1
#after each depth/filter inspect the semblance
inspect_semb = 0

#depths= from,to,steps relative to depth in origin config
depths=0,0,5
# run each depth step with a number of filter(s), used for high vs. low freq.
filters=2
# dimx of grid
dimx = 50
# dimy of grid
dimy = 50
# min distance to origin of stations
minDist = 23
# max distance to origin of stations
maxDist = 93
# step length in s.
step = 2
# window length in s.
winlen = 8
# step length in s.44
step_f2 = 2
# window length in s.
winlen_f2 = 8
# length of data before phase onset in s.
forerun = 10
# length of data after phase onset in s.
duration = 20
security = 200
# gridspacing in degree
gridspacing = 0.025
# save processed waveforms and load them in later BPs
load_wdf = 0

traveltime_model = ak135-f-continental.m.nd

#apply futterman_attenuation to S waves
futterman_attenuation = 0

[Optimization parameter]
# Optimize for a model with array responses as input
# enable optimzation
optimize = 0
# enable optimization of combined semblance
optimize_all = 0



[process parameter]
#number of cores for traveltime calculation
ncore = 2
# create output of compressed sensing as grid [warning: experimental]
cs = 0
#weight array contributions by noise variance (pre-event)
weight_by_noise = 0
# shift the traces to theoretical onset, disregarding curved travel times
# produces better crosscorrelations, but only valid for small arrays
shift_by_phase_onset = 0
# use a phase weighted stacking
shift_by_phase_pws = 0
# shift by crosscorrelation
shift_by_phase_cc = 0
# create an obspy array response
array_response = 0

[focal mechanism solution values from event file]
#not used right now
fm = 1

[automatic picker and correlation parameter]

xcorr=1
# for manual phase shift picking for each array set autoxcorrcorrectur to 1:
autoxcorrcorrectur = 1
# crosscorrelation threshold for excluding stations
xcorrtreshold = 0.6

#filter for referencestation for automatic picker
#should match your main filter
refstationfreqmin=0.03
refstationfreqmax=1.00
refstationcorners=2
refstationzph=false

#STA/LTA parameter
refsta=0.5
reflta=4

[array parameter]
#example only!
networks=r1

r1=XK.B03SL..BHZ|XK.B04KH..BHZ|XK.B05MO..BHZ|XK.B06OR..BHZ|XK.B07DX..BHZ|XK.B08TS..BHZ|XK.B09NK..BHZ|XK.B10PP..BHZ|XK.B11ET..BHZ|XK.B12SS..BHZ|XK.B13NX..BHZ|XK.B14MH..BHZ|XK.B15MW..BHZ|XK.B17CI..BHZ
r1refstation=
r1phase=P


[beamforming method]
#delaysum
#capon
beam = delaysum

[filterparameter]
#use dynamic filtering (attached to theoretical moment release)
dynamic_filter = 0
# define main filter for picking etc:
filterswitch=1
###############################################################
#Parameter for first filter
#bp butterworth

# low cut corner frequency
flo = 0.08

# high cut corner frequency
fhi = 0.24

# number of filter sections
ns = 4

# TRUE -> zero phase filter
zph = false


###############################################################
#Parameter for second filter
#bp butterworth

# low cut corner frequency
flo2 = 0.1

# high cut corner frequency
fhi2 = 0.5

# number of filter sections
ns2 = 4

# TRUE -> zero phase filter
zph2 = false

###############################################################
#Alternative lowpass filter example
#lowpass butterworth
l_fc = 1.5
# number of filter sections
l_ns = 4
# TRUE -> zero phase filter
l_zph = false

###############################################################
#Alternative highpass filter example
#highpass butterworth
h_fc = 2
# number of filter sections
h_ns = 4
# TRUE -> zero phase filter
h_zph = false

##################################################################
